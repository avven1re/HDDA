install.packages(c("corrplot", "fields", "plotrix", "RColorBrewer"))
#ggplot
install.packages("gridExtra")     #for gird ggplot(one page include more than one ggplot)
install.packages("plot3D")
h1 <- ggplot(data=iris, aes(x=Sepal.Length)) + geom_histogram()
h2 <- ggplot(data=iris, aes(x=Sepal.Length)) + geom_histogram(binwidth=1)
h3 <- ggplot(data=iris, aes(x=Sepal.Length)) +
geom_histogram(color="black", fill="blue", bins = 10)
h4 <- ggplot(data=iris, aes(x=Sepal.Length, color=Species)) + geom_histogram(binwidth = 1)
grid.arrange(h1, h2, h3, h4, nrow=1, ncol=4)
library(gridExtra)
#ggplot
install.packages("ggplot2")
library(ggplot2)
h1 <- ggplot(data=iris, aes(x=Sepal.Length)) + geom_histogram()
h2 <- ggplot(data=iris, aes(x=Sepal.Length)) + geom_histogram(binwidth=1)
h3 <- ggplot(data=iris, aes(x=Sepal.Length)) +
geom_histogram(color="black", fill="blue", bins = 10)
h4 <- ggplot(data=iris, aes(x=Sepal.Length, color=Species)) + geom_histogram(binwidth = 1)
grid.arrange(h1, h2, h3, h4, nrow=1, ncol=4)
#9/47
p <- ggplot(data=iris, aes(x=Sepal.Length))
p <- p + geom_histogram()
p + facet_grid(Species~.)
iris.mean <- aggregate(iris[,1:4], by=list(Species=iris$Species), FUN=mean)
iris.mean
mydata <- cbind(stack(iris.mean[,-1]), Species = iris.mean$Species)
mydata
ggplot(mydata, aes(x=ind, y=values, fill = Species)) +
+ geom_bar(position="dodge", stat="identity")
ggplot(mydata, aes(x=ind, y=values, fill = Species)) + geom_bar(position="dodge", stat="identity")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
#14/47
p <- ggplot(data=mtcars, aes(x=wt, y=mpg, label = rownames(mtcars)))
p + geom_point()
library(ggplot2)
#14/47
p <- ggplot(data=mtcars, aes(x=wt, y=mpg, label = rownames(mtcars)))
p + geom_point()
p + geom_text(size=3)
p + geom_label()
#17/47 Google Map
install.packages("ggmap")
library(ggmap)
register_google(key = "AIzaSyD7ExFH62Ni2cYE5Vp4939DVO6DeUKxupk", write = TRUE)
houston_center <- geocode("Houston, TX")
houston_center
has_google_key()
google_key()
ggmap_show_api_key()
#GoogleMap
install.packages("RgoogleMaps")
#GoogleMap
install.packages("RgoogleMaps")
install.packages("RgoogleMaps")
library(RgoogleMaps)
WorldMap <- GetMap(center=c(0,0), zoom =1,
destfile = "World1.png")
library(ggmap)
twmap <- get_map(location = 'Taiwan', zoom = 7, language = "zh-TW")
library(ggmap)
library(RgoogleMaps)
twmap <- get_map(location = 'Taiwan', zoom = 7, language = "zh-TW")
twmap
TaiwanMap <- GetMap(center=c(lat = 23.58, lon =120.58), zoom =7, destfile = "Taiwan1.png")
TaiwanMap <- GetMap(center=c(lat = 23.58, lon =120.58), zoom = 10, destfile = "Taiwan2.png",
maptype = "terrain")
install.packages("mapproj")
library(mapproj)
tw.map <- get_map(location = 'Taiwan', zoom = 7)
ggmap(tw.map)
tw.map.zh <- get_map(location = 'Taiwan', zoom = 7, language = "zh-TW")
ggmap(tw.map.zh)
tw.map.ntpu <- get_map(location = c(lon = 121.374925, lat = 24.943403),
zoom = 10, language = "zh-TW" , maptype = "terrain")
ggmap(tw.map.ntpu)
tw.map.ntpu <- get_map(location = c(lon = 121.374925, lat = 24.943403),
zoom = 10, language = "zh-TW" , maptype = "terrain")
ggmap(tw.map.ntpu)
tw.map.ntpu <- get_map(location = c(lon = 121.374925, lat = 24.943403),
zoom = 10, language = "zh-TW" , maptype = "terrain")
ggmap(tw.map.ntpu)
tw.map.ntpu <- get_map(location = c(lon = 121.374925, lat = 24.943403),
zoom = 20, language = "zh-TW" , maptype = "terrain")
ggmap(tw.map.ntpu)
tw.map.ntpu <- get_map(location = c(lon = 121.374925, lat = 24.943403),
zoom = 15, language = "zh-TW" , maptype = "terrain")
ggmap(tw.map.ntpu)
has_google_key()
google_key()
tw.map <- get_map(location = 'Taiwan', zoom = 7, language = "zh-TW")
tw.map <- get_map(location = 'Taiwan', zoom = 7, language = "zh-TW")
TaiwanMap <- GetMap(center=c(lat = 23.58, lon =120.58), zoom =7, destfile = "Taiwan1.png")
TaiwanMap <- GetMap(center=c(lat = 23.58, lon =120.58), zoom = 10, destfile = "Taiwan2.png", maptype = "terrain")
# 22/68
my.lat <- c(25.175339, 25.082288, 25.042185, 25.046254)
my.lon <- c(121.450003, 121.565481, 121.614548, 121.517532)
bb = qbbox(my.lat, my.lon)
print(bb)
MyMap <- GetMap.bbox(bb$lonR, bb$latR, destfile = "my.png", maptype = "roadmap")
My.markers <- cbind.data.frame(lat = my.lat, lon = my.lon)
tmp <-  PlotOnStaticMap(MyMap, lat = My.markers[,"lat"], lon = My.markers[,"lon"], destfile = "my.png", cex=2.5, pch=20, col=1:4, add=F)
MyMap <- GetMap.bbox(bb$lonR, bb$latR, destfile = "pic/my.png", maptype = "roadmap")
# 23/68 於地圖上標記
png("my2.png", 640, 640)
